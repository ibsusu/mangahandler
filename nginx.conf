
#user  nobody;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;

error_log /roboscans/logging/error.log  info;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    #include       /etc/nginx/sites-enabled/*.*;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    sendfile        on;
    #sendfile_max_chunk 512k;

    tcp_nopush     on;
    tcp_nodelay    on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    types_hash_max_size 2048;
    #server {
    #    listen       80;
    #    server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

    #    location / {
    #        root   /var/www;
    #        index  page.html;
    #    }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


	server{
        listen 80;
        server_name localhost dummydomain.com;
        return 301 https://$server_name$request_uri;
    }
	server{ #http on dev
		listen 8080 default_server;
		server_name localhost;
		client_max_body_size 100m;
        access_log /roboscans/logging/access.log;
        
        keepalive_timeout 70;
        location / { 
            root /roboscans/www;
            index page.html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location /data {
            proxy_pass http://localhost:8081;
        }
        location /upload {
            # Pass altered request body to this location
        upload_pass @test;

        # Store files to this directory
        # the directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /roboscans/tmp 1;

        # Allow uploaded files to be read only by user
        upload_store_access user:rw group:rw all:rw;
        
        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.sha1" "$upload_file_sha1";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        upload_pass_form_field "^submit$|^description$";
        upload_cleanup 400 404 499 500-505;
        }
        location @test {
            proxy_pass http://localhost:8081;
        }
        location /manga {
            proxy_pass http://localhost:8081;
        }
        location /listings {
            proxy_pass http://localhost:8081;
        }
        location ~ ^/images/(.*\.(jpg|JPG|jpeg|JPEG|png|PNG))$ {
            alias /roboscans/manga/$1;
            sendfile    on;
            sendfile_max_chunk  1m;
            tcp_nopush  on;
        }

	}	
    server {  # https on server
        client_max_body_size 100m;
        listen 443 ssl;
        ssl     on;
        ssl_certificate /roboscans/certs/cert.pem;
        ssl_certificate_key /roboscans/certs/privkey.pem;
        access_log /roboscans/logging/access.log;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        server_name dummydomain.com
        keepalive_timeout 70;
        location / { 
            root /roboscans/www;
            index page.html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location /data {
            proxy_pass http://localhost:8081;
        }
        location /upload {
            # Pass altered request body to this location
        upload_pass @test;

        # Store files to this directory
        # the directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /roboscans/tmp 1;

        # Allow uploaded files to be read only by user
        upload_store_access user:rw group:rw all:rw;
        
        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.sha1" "$upload_file_sha1";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        upload_pass_form_field "^submit$|^description$";
        upload_cleanup 400 404 499 500-505;
        }
        location @test {
            proxy_pass http://localhost:8081;
        }
        location /manga {
            proxy_pass http://localhost:8081;
        }
        location /listings {
            proxy_pass http://localhost:8081;
        }
        location ~ ^/images/(.*\.(jpg|JPG|jpeg|JPEG|png|PNG))$ {
            alias /roboscans/manga/$1;
            sendfile    on;
            sendfile_max_chunk  1m;
            tcp_nopush  on;
        }
    }
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
