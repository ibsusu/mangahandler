// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var diogenes = diogenes || {};

/**
 * @const
 * @namespace
 */
diogenes.general = diogenes.general || {};

/**
 * @constructor
 */
diogenes.general.CB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {diogenes.general.CB}
 */
diogenes.general.CB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {diogenes.general.CB=} obj
 * @returns {diogenes.general.CB}
 */
diogenes.general.CB.getRootAsCB = function(bb, obj) {
  return (obj || new diogenes.general.CB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
diogenes.general.CB.prototype.cid = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
diogenes.general.CB.prototype.rid = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
diogenes.general.CB.prototype.did = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
diogenes.general.CB.prototype.t1 = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
diogenes.general.CB.prototype.t2 = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
diogenes.general.CB.startCB = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} cid
 */
diogenes.general.CB.addCid = function(builder, cid) {
  builder.addFieldInt64(0, cid, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} rid
 */
diogenes.general.CB.addRid = function(builder, rid) {
  builder.addFieldInt64(1, rid, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} did
 */
diogenes.general.CB.addDid = function(builder, did) {
  builder.addFieldInt64(2, did, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} t1Offset
 */
diogenes.general.CB.addT1 = function(builder, t1Offset) {
  builder.addFieldOffset(3, t1Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} t2Offset
 */
diogenes.general.CB.addT2 = function(builder, t2Offset) {
  builder.addFieldOffset(4, t2Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
diogenes.general.CB.endCB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
diogenes.general.CB.finishCBBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.diogenes = diogenes;
